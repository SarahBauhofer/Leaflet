<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kundenkarte mit Info-Symbolen und Routenplaner</title>
    <!-- Lade Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <!-- Lade alertify CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/alertify.min.css" />
    <!-- Lade alertify Theme CSS (optional) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/css/themes/default.min.css" />
    <style>
        #map {
            height: 500px;
        }
    </style>
</head>
<body>

<!-- Erstelle eine Container-Div für die Karte -->
<div id="map"></div>

<!-- Lade Leaflet JavaScript -->
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<!-- Lade alertify JavaScript -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/AlertifyJS/1.13.1/alertify.min.js"></script>

<script>
    // Initialisiere die Karte
    var mymap = L.map('map').setView([51.1657, 10.4515], 6);

    // Füge die OpenStreetMap-Kartenschicht hinzu
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(mymap);

    // Icons definieren
    var tractorIconBlack = L.icon({
        iconUrl: 'black_icon.png',
        iconSize: [42, 42],
        iconAnchor: [21, 42],
        popupAnchor: [1, -34],
        tooltipAnchor: [16, -28],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        shadowSize: [42, 42]
    });
    var tractorIconGreen = L.icon({
        iconUrl: 'green_icon.png',
        iconSize: [42, 42],
        iconAnchor: [21, 42],
        popupAnchor: [1, -34],
        tooltipAnchor: [16, -28],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        shadowSize: [42, 42]
    });
    var tractorIconOrange = L.icon({
        iconUrl: 'orange_icon.png',
        iconSize: [42, 42],
        iconAnchor: [21, 42],
        popupAnchor: [1, -34],
        tooltipAnchor: [16, -28],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        shadowSize: [42, 42]
    });
    var tractorIconRed = L.icon({
        iconUrl: 'red_icon.png',
        iconSize: [42, 42],
        iconAnchor: [21, 42],
        popupAnchor: [1, -34],
        tooltipAnchor: [16, -28],
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',
        shadowSize: [42, 42]
    });

    // Kunden mit ihren Standorten und Informationen
    var customers = [
        {
            name: "Landtechnik Müller Hans",
            location: [47.6595, 9.4783], // Koordinaten für Friedrichshafen
            address: "Am Seemooser Horn 20, 88045 Friedrichshafen",
            phone: "0123-456789 ",
            email: "mueller@landtechnik.de",
            order: "Traktor GPS-Installation",
            dueDate: "15.06.2024",
            duration: 3
        },
        {
            name: "Agrar Service Schmidt",
            location: [47.6607, 9.1751], // Koordinaten für Konstanz
            address: "Alfred-Wachtel-Straße 8, 78462 Konstanz",
            phone: "0234-567890",
            email: "schmidt@agrar.de",
            order: "Lenksystem-Upgrade",
            dueDate: "01.05.2024",
            duration: 2
        },
        {
            name: "Bauer Huber GmbH",
            location: [47.7238, 10.3121], // Koordinaten für Kempten
            address: "Bahnhofstraße 61, 87435 Kempten",
            phone: "03456-678901",
            email: "huber@bauernhof.de",
            order: "GPS-Antennenmontage",
            dueDate: "30.04.2024",
            duration: 1
        },
        {
            name: "Grünfeld AG",
            location: [47.7752, 9.6128], // Koordinaten für Ravensburg
            address: "Marienplatz 2, 88212 Ravensburg",
            phone: "0456-78901",
            email: "gruen@gruenfeld.ag",
            order: "Feldkartierung mit GPS",
            dueDate: "10.03.2024",
            duration: 5
        },
        {
            name: "Feldwerk KG",
            location: [48.1011, 9.7908], // Koordinaten für Biberach
            address: "Karlstraße 11, 88400 Biberach",
            phone: "0567-890123",
            email: "feld@feldwerk.kg",
            order: "Automatische Lenkassistenz",
            dueDate: "25.04.2024",
            duration: 4
        },

        {
            name: "Ackerguide",
            location: [48.93322, 8.96039], // Koordinaten für "Katharinenstraße 6, 71665 Vaihingen an der Enz"
            address: "Katharinenstraße 6, 71665 Vaihingen an der Enz"
        }
    ];

    // Kundenstandorte mit Info-Symbolen und Popups hinzufügen
    customers.forEach(function(customer) {
        var today = new Date();
        today = new Date(today.getFullYear(), today.getMonth(), today.getDate());

        // Marker für Kundenstandort hinzufügen
        if (customer.hasOwnProperty("dueDate")) {
            var due_data = customer.dueDate.split(".")
            var day = parseInt(due_data[0])
            var month = parseInt(due_data[1])
            var year = parseInt(due_data[2])

            var due_date = new Date(year, month - 1, day);
            var short_time = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 14);
            var medium_time = new Date(today.getFullYear(), today.getMonth() + 2, today.getDate());

            if (short_time > due_date) {
                var marker = L.marker(customer.location, {icon: tractorIconRed}).addTo(mymap);
            } else if (medium_time > due_date) {
                var marker = L.marker(customer.location, {icon: tractorIconOrange}).addTo(mymap)
            } else {
                var marker = L.marker(customer.location, {icon: tractorIconGreen}).addTo(mymap);
            }
        } else {
            var marker = L.marker(customer.location, {icon: tractorIconBlack}).addTo(mymap);
        }
        // Popup mit Kundeninformationen und Buttons "Route planen" und "Auftrag ansehen" erstellen
        var popupContent = "<b>" + customer.name + "</b><br>" +
            "Adresse: " + customer.address + "<br><br>" +
            "Telefon: " + customer.phone + "<br><br>" +
            "E-Mail: " + customer.email + "<br><br>" +
            "<button onclick=\"planRoute('" + customer.address + "')\">Route planen</button>" + "&nbsp;" +
            "<button onclick=\"viewOrder('" + customer.order + "', '" + customer.dueDate + "', " + customer.duration + ")\">Auftrag ansehen</button>";

        // Popup zum Marker hinzufügen
        marker.bindPopup(popupContent);
    });

    // Funktion zum Anzeigen der Auftragsdetails in einem Popup-Fenster
    function viewOrder(order, dueDate, duration) {
        // Konstruiere den HTML-Inhalt für das Popup-Fenster mit den Auftragsdetails
        var popupContent = "<div style='text-align: left; padding: 10px;'>" +
            "<h3 style='margin-bottom: 10px;'>Auftragsdetails</h3>" +
            "<p><b>Auftragsbezeichnung:</b> " + order + "</p>" +
            "<p><b>Fälligkeitsdatum:</b> " + dueDate + "</p>" +
            "<p><b>Geschätzte Dauer (Tage):</b> " + duration + "</p>" +
            "</div>";

        // Zeige die Auftragsdetails in einem Popup-Fenster an
        alertify.alert('Auftragsdetails', popupContent).set({transition:'zoom'}).show();
    }

    // Standorterkennung aufrufen
    getLocation();

    // Funktion zum Markieren des aktuellen Standorts
    function markCurrentLocation(position) {
        var latitude = position.coords.latitude;
        var longitude = position.coords.longitude;

        var marker = L.marker([latitude, longitude]).addTo(mymap);
        marker.bindPopup("Dein Standort").openPopup();
    }

    // Funktion zum Abrufen der aktuellen Position
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(markCurrentLocation);
        } else {
            alert("Geolocation wird von diesem Browser nicht unterstützt.");
        }
    }

    // Funktion zum Planen einer Route
    function planRoute(address) {
        // Generiere die URL für die Directions API von Google
        var url = "https://www.google.com/maps/dir/?api=1&destination=" + encodeURIComponent(address);

        // Öffne den Link in einem neuen Tab
        window.open(url, '_blank');

    }
</script>

</body>
</html>
